<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.danbro.edu.mapper.EduCourseMapper">
    <select id="getCourseInfoForPublish" resultType="com.danbro.edu.controller.vo.CoursePublishVo">
        SELECT ec.id           AS id,
               ec.title        AS title,
               ec.price        AS price,
               ec.lesson_num   AS lessonNum,
               ec.cover        AS cover,
               ecd.description AS description,
               et.`name`       AS teacherName,
               es1.title       AS oneSubject,
               es2.title       AS twoSubject
        FROM edu_course ec
                 LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
                 LEFT JOIN edu_teacher et ON ec.teacher_id = et.id
                 LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id
                 LEFT JOIN edu_subject es2 ON ec.subject_id = es2.id
        WHERE ec.id = #{id}
    </select>

    <resultMap id="courseDetailInfoMap" type="com.danbro.vo.FrontCourseDetailInfoVo">
        <id property="courseId" column="courseId"/>
        <result property="courseCover" column="courseCover"/>
        <result property="buyCount" column="buyCount"/>
        <result property="viewCount" column="viewCount"/>
        <result property="lessonNum" column="lessonNum"/>
        <result property="subjectLevelOne" column="subjectLevelOne"/>
        <result property="subjectLevelTwo" column="subjectLevelTwo"/>
        <result property="coursePrice" column="coursePrice"/>
        <result property="courseTitle" column="courseTitle"/>
        <result property="courseDescription" column="courseDescription"/>
        <result property="teacherName" column="teacherName"/>
        <result property="teacherId" column="teacherId"/>
        <result property="teacherIntro" column="teacherIntro"/>
        <result property="teacherAvatar" column="teacherAvatar"/>
        <collection property="chapterList" ofType="com.danbro.dto.FrontCourseDetailInfoChapterDto">
            <id property="chapterId" column="chapterId"/>
            <result property="chapterTitle" column="chapterTitle"/>
            <collection property="videoList" ofType="com.danbro.dto.FrontCourseDetailInfoVideoDto">
                <id property="videoId" column="videoId"/>
                <result property="isFree" column="isFree"/>
                <result property="videoSourceId" column="videoSourceId"/>
                <result property="videoTitle" column="videoTitle"/>
            </collection>
        </collection>

    </resultMap>

    <select id="getCourseDetailInfo" resultMap="courseDetailInfoMap">
        SELECT ec.id              AS courseId,
               ec.cover           AS courseCover,
               ec.buy_count       AS buyCount,
               ec.price           AS coursePrice,
               ec.title           AS courseTitle,
               ec.view_count      AS viewCount,
               ec.lesson_num      AS lessonNum,
               ecd.description    AS courseDescription,
               ep.title           AS chapterTitle,
               ep.id              AS chapterId,
               ev.id              AS videoId,
               ev.title           AS videoTitle,
               ev.video_source_id AS videoSourceId,
               et.name            AS teacherName,
               et.id              AS teacherid,
               et.intro           AS teacherIntro,
               et.avatar          AS teacherAvatar,
               es1.title          AS subjectLevelTwo,
               es2.title          AS subjectLevelOne,
               ev.is_free         AS isFree
        FROM edu_course ec
                 LEFT JOIN edu_chapter ep ON ec.id = ep.course_id
                 LEFT JOIN edu_video ev ON ep.id = ev.chapter_id
                 LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
                 LEFT JOIN edu_teacher et ON et.id = ec.teacher_id
                 LEFT JOIN edu_subject es1 ON ec.subject_id = es1.id
                 LEFT JOIN edu_subject es2 ON ec.subject_parent_id = es2.id
        WHERE ec.id = #{id}
    </select>

    <resultMap id="courseBasicInfoResultMap" type="com.danbro.vo.CourseVo">
        <id property="id" column="courseId"/>
        <result property="lessonNum" column="lessonNum"/>
        <result property="buyCount" column="buyCount"/>
        <result property="cover" column="cover"/>
        <result property="gmtCreate" column="gmtCreate"/>
        <result property="gmtModified" column="gmtModified"/>
        <result property="price" column="price"/>
        <result property="status" column="status"/>
        <result property="title" column="title"/>
        <result property="subjectId" column="subjectId"/>
        <result property="subjectParentId" column="subjectParentId"/>
        <result property="description" column="description"/>
        <association property="teacher" javaType="com.danbro.vo.TeacherVo">
            <id property="id" column="teacherId"/>
            <result property="name" column="teacherName"/>
            <result property="level" column="teacherLevel"/>
            <result property="intro" column="teacherIntro"/>
            <result property="career" column="teacherCareer"/>
            <result property="avatar" column="teacherAvatar"/>
        </association>
    </resultMap>

    <select id="getCourseBasicInfoByCourseId" resultMap="courseBasicInfoResultMap">
        SELECT ec.id           AS courseId,
               ec.lesson_num   AS lessonNum,
               ec.buy_count    AS buyCount,
               ec.cover        AS cover,
               ec.gmt_create   AS gmtCreate,
               ec.gmt_modified AS gmtModified,
               ec.price        AS price,
               ec.status     AS status,
               ec.title        AS title,
               ec.subject_id    AS subjectId,
               ec.subject_parent_id AS subjectParentId,
               ecd.description AS description,
               et.name       AS teacherName,
               et.avatar       as teacherAvatar,
               et.career       as teacherCareer,
               et.id           as teacherId,
               et.intro        as teacherIntro,
               et.level      as teacherLevel
        FROM edu_course ec
                 LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
                 LEFT JOIN edu_teacher et ON et.id = ec.teacher_id
        WHERE ec.id = #{id}
    </select>
</mapper>